name: CI • Backend • Build | Test | Coverage | Docker

on:
  push:
    branches:
      - develop
      - "feature/*"
    paths:
      - "backend/**"
      - ".github/workflows/**"

jobs:
  build:
    name: 🧪 Build & Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: 🛠️ Code checkout
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: maven

      - name: ⚙️ Maven build
        working-directory: ./backend
        run: mvn clean install -DskipTests

      - name: 🔍 Run tests with JaCoCo coverage
        working-directory: ./backend
        run: mvn test

      - name: 📊 Generate JaCoCo coverage report
        working-directory: ./backend
        run: mvn jacoco:report

      - name: 🚨 Verify minimal test coverage required
        working-directory: ./backend
        run: mvn clean verify

  docker-build:
    name: 🐳 Docker Build & Push
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write

    env:
      COMPONENT: myapp
      CONTEXT: backend
      ENV: dev
      VERSION: ${{ github.sha }}

    steps:
      - name: 🛠️ Code checkout
        uses: actions/checkout@v4

      - name: ☕ Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"
          cache: maven

      - name: ⚙️ Maven build
        working-directory: ./backend
        run: mvn clean install -DskipTests

      - name: 🔐 Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Build Docker Image
        run: |
          ACTOR_LOWER=$(echo "$GITHUB_ACTOR" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="${COMPONENT}-${CONTEXT}"
          FULL_IMAGE_NAME="ghcr.io/${ACTOR_LOWER}/${IMAGE_NAME}:${ENV}-${VERSION}"
          echo "Building image: $FULL_IMAGE_NAME"
          docker build -f ./backend/Dockerfile -t $FULL_IMAGE_NAME ./backend

      - name: 📦 Push Docker Image
        run: |
          ACTOR_LOWER=$(echo "$GITHUB_ACTOR" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="${COMPONENT}-${CONTEXT}"
          FULL_IMAGE_NAME="ghcr.io/${ACTOR_LOWER}/${IMAGE_NAME}:${ENV}-${VERSION}"
          echo "Pushing image: $FULL_IMAGE_NAME"
          docker push $FULL_IMAGE_NAME
